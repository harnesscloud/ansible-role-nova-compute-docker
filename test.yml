---
- hosts: all
  sudo: False
  vars:
    cirros_url: http://cdn.download.cirros-cloud.net/0.3.2/cirros-0.3.2-x86_64-disk.img
    openstack_identity_demo_password: password
    openstack_network_internal_name: demo-net
    openstack_network_internal_subnet_name: demo-subnet
    openstack_network_internal_subnet_cidr: 192.168.0.0/24
    openstack_network_internal_subnet_dns_nameservers: 8.8.8.8
    openstack_network_internal_subnet_gateway_ip: 192.168.0.1
    openstack_network_external_name: public
    openstack_router_name: demo-router
  tasks:

    - name: update admin.openrc from template
      template:
        src: templates/admin.openrc
        dest: "{{ ansible_env.PWD }}/admin.openrc"
        owner: "{{ ansible_ssh_user }}"

    - name: create demo tenant
      keystone_user:
        endpoint: "{{ openstack_identity_admin_url }}"
        token: "{{ openstack_identity_admin_token }}"
        tenant: demo
        tenant_description: "Demo Tenant"

    - name: create demo user
      keystone_user:
        endpoint: "{{ openstack_identity_admin_url }}"
        token: "{{ openstack_identity_admin_token }}"
        tenant: demo
        user: demo
        password: "{{ openstack_identity_demo_password }}"

    - name: associate _member_ role with demo user
      keystone_user:
        endpoint: "{{ openstack_identity_admin_url }}"
        token: "{{ openstack_identity_admin_token }}"
        tenant: demo
        user: demo
        role: _member_

    - name: update demo.openrc template
      template:
        src: templates/demo.openrc
        dest: "{{ ansible_env.PWD }}/demo.openrc"
        mode: 0600

    - name: ensure cirros image is registered
      glance_image:
        auth_url: "{{ openstack_identity_public_url }}"
        login_tenant_name: demo
        login_username: demo
        login_password: "{{ openstack_identity_demo_password }}"
        name: cirros
        disk_format: qcow2
        copy_from: "{{ cirros_url }}"
        is_public: True
        timeout: 1200
        state: present
      register: cirros_image

    # Ansible neutron modules lists all tenants to get ids, but this is not
    # permitted for non-admin users. Need to fix neutron_* modules as non-admin
    # *should* be able to create networks, associate floating ips, etc.

    - name: ensure demo user has admin role
      keystone_user:
        endpoint: "{{ openstack_identity_admin_url }}"
        token: "{{ openstack_identity_admin_token }}"
        tenant: demo
        user: demo
        role: admin

    - name: update demo.openrc from template
      template:
        src: templates/demo.openrc
        dest: "{{ ansible_env.PWD }}/demo.openrc"
        owner: "{{ ansible_ssh_user }}"

    - name: ensure internal network is registered
      neutron_network:
        auth_url: "{{ openstack_identity_public_url }}"
        login_tenant_name: demo
        login_username: demo
        login_password: "{{ openstack_identity_demo_password }}"
        tenant_name: demo
        name: "{{ openstack_network_internal_name }}"
        state: present
      register: openstack_network_internal

    - name: ensure subnet internal network is registered
      neutron_subnet:
        auth_url: "{{ openstack_identity_public_url }}"
        login_tenant_name: demo
        login_username: demo
        login_password: "{{ openstack_identity_demo_password }}"
        tenant_name: demo
        name: "{{ openstack_network_internal_subnet_name }}"
        network_name: "{{ openstack_network_internal_name }}"
        cidr: "{{ openstack_network_internal_subnet_cidr }}"
        enable_dhcp: true
        gateway_ip: "{{ openstack_network_internal_subnet_gateway_ip }}"
        dns_nameservers: "{{ openstack_network_internal_subnet_dns_nameservers }}"
        state: present

    - name: ensure router exists
      neutron_router:
        auth_url: "{{ openstack_identity_public_url }}"
        login_tenant_name: demo
        login_username: demo
        login_password: "{{ openstack_identity_demo_password }}"
        tenant_name: demo
        name: "{{ openstack_router_name }}"
        state: present

    - name: ensure router has interface connected to internal network
      neutron_router_interface:
        auth_url: "{{ openstack_identity_public_url }}"
        login_tenant_name: demo
        login_username: demo
        login_password: "{{ openstack_identity_demo_password }}"
        tenant_name: demo
        router_name: "{{ openstack_router_name }}"
        subnet_name: "{{ openstack_network_internal_subnet_name }}"
        state: present

    - name: ensure router has external network gateway
      neutron_router_gateway:
        auth_url: "{{ openstack_identity_public_url }}"
        login_tenant_name: demo
        login_username: demo
        login_password: "{{ openstack_identity_demo_password }}"
        router_name: "{{ openstack_router_name }}"
        network_name: "{{ openstack_network_external_name }}"
        state: present

    - name: create ssh keypair
      command: ssh-keygen -q -f {{ ansible_env.PWD }}/.ssh/id_rsa -P ""
               creates={{ ansible_env.PWD }}/.ssh/id_rsa

    - name: capture public key in variable
      command: cat {{ ansible_env.PWD }}/.ssh/id_rsa.pub
      register: pubkey
      changed_when: false

    - name: add ssh keypair to nova
      nova_keypair:
        auth_url: "{{ openstack_identity_public_url }}"
        login_tenant_name: demo
        login_username: demo
        login_password: "{{ openstack_identity_demo_password }}"
        name: default
        public_key: "{{ pubkey.stdout }}"
        state: present

    - name: configure default security group to allow ping and ssh
      neutron_sec_group:
        auth_url: "{{ openstack_identity_public_url }}"
        login_tenant_name: demo
        login_username: demo
        login_password: "{{ openstack_identity_demo_password }}"
        name: default
        description: description
        rules:
          - direction: ingress
            protocol: icmp
          - direction: ingress
            protocol: tcp
            port_range_min: 22
            port_range_max: 22
        state: present
 
    - name: create a new virtual machine instance
      nova_compute:
        auth_url: "{{ openstack_identity_public_url }}"
        login_tenant_name: demo
        login_username: demo
        login_password: "{{ openstack_identity_demo_password }}"
        name: cirros
        flavor_id: 1
        image_id: "{{ cirros_image.id }}"
        nics:
          - net-id: "{{ openstack_network_internal.id }}"
        key_name: default
        security_groups: default
        wait: "yes"
        state: present
      register: cirros_instance

    - name: ensure floating ip is associated with vm instance
      neutron_floating_ip:
        auth_url: "{{ openstack_identity_public_url }}"
        login_tenant_name: demo
        login_username: demo
        login_password: "{{ openstack_identity_demo_password }}"
        instance_name: cirros
        network_name: "{{ openstack_network_external_name }}"
        state: present
