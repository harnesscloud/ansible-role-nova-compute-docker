---
- name: ensure nova.conf is properly configured
  ini_file:
    dest: /etc/nova/nova.conf
    owner: nova
    group: nova
    mode: 0700
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: DEFAULT, option: verbose, value: "{{ nova_log_verbose }}" }
    - { section: DEFAULT, option: debug, value: "{{ nova_log_debug }}" }
    - { section: DEFAULT, option: log_dir, value: /var/log/nova }
    - { section: DEFAULT, option: rpc_backend, value: rabbit }
    - { section: DEFAULT, option: rabbit_host, 
        value: "{{ nova_rabbitmq_host }}" }
    - { section: DEFAULT, option: rabbit_port, 
        value: "{{ nova_rabbitmq_port }}" }
    - { section: DEFAULT, option: rabbit_userid, value: nova }
    - { section: DEFAULT, option: rabbit_password, 
        value: "{{ nova_rabbitmq_nova_password }}" }
    - { section: DEFAULT, option: rabbit_virtual_host, value: /nova }
    - { section: DEFAULT, option: glance_host, 
        value: "{{ nova_glance_host }}" }
    - { section: DEFAULT, option: my_ip, 
        value: "127.0.0.1" }
    - { section: DEFAULT, option: vncserver_listen, 
        value: "0.0.0.0" }
    - { section: DEFAULT, option: vncserver_proxyclient_address, 
        value: "127.0.0.1" }
    - { section: DEFAULT, option: novncproxy_base_url,
        value: "http://127.0.0.1:6080/vnc_auto.html" }
    - { section: DEFAULT, option: auth_strategy, value: keystone }
    - { section: DEFAULT, 
        option: network_api_class, value: nova.network.neutronv2.api.API }
    - { section: DEFAULT, 
        option: neutron_url, value: "{{ nova_network_admin_url }}" }
    - { section: DEFAULT, option: neutron_auth_strategy, value: keystone }
    - { section: DEFAULT, option: neutron_admin_tenant_name, value: service }
    - { section: DEFAULT, option: neutron_admin_username, value: neutron }
    - { section: DEFAULT, option: neutron_admin_password, 
        value: "{{ nova_identity_neutron_password }}" }
    - { section: DEFAULT, option: neutron_admin_auth_url, 
        value: "{{ nova_identity_admin_url }}" }
    - { section: DEFAULT, option: linuxnet_interface_driver, 
        value: nova.network.linux_net.LinuxOVSInterfaceDriver }
    - { section: DEFAULT, 
        option: firewall_driver, value: nova.virt.firewall.NoopFirewallDriver }
    - { section: DEFAULT, option: security_group_api, value: neutron }
    - { section: database, option: connection,
        value: "mysql://nova:{{ nova_mysql_nova_password }}@{{ 
                  nova_mysql_host }}:{{ nova_mysql_port }}/nova" }
    - { section: keystone_authtoken, option: auth_uri, 
        value: "{{ nova_identity_admin_url }}" }
    - { section: keystone_authtoken, option: auth_host, 
        value: "{{ nova_identity_host }}" }
    - { section: keystone_authtoken, option: auth_port, value: 35357 }
    - { section: keystone_authtoken, option: auth_protocol, value: http }
    - { section: keystone_authtoken, option: admin_tenant_name, 
        value: service }
    - { section: keystone_authtoken, option: admin_user, value: nova }
    - { section: keystone_authtoken, option: admin_password, 
        value: "{{ nova_identity_nova_password }}" }
  register: modify_nova_conf

- name: ensure nova-compute.conf is properly configured
  ini_file:
    dest: /etc/nova/nova-compute.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: libvirt, option: virt_type, 
        value: "{{ nova_compute_virt_type }}" }
 
# FIXME: potential for variable clash...
- name: ensure neutron.conf is properly configured
  ini_file:
    dest: /etc/neutron/neutron.conf
    owner: neutron
    group: neutron
    mode: 0600
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: DEFAULT, option: verbose, value: "{{ nova_log_verbose }}" }
    - { section: DEFAULT, option: debug, value: "{{ nova_log_debug }}" }
    - { section: DEFAULT, option: log_dir, value: /var/log/neutron }
    - { section: DEFAULT,
        option: rpc_backend, value: neutron.openstack.common.rpc.impl_kombu }
    - { section: DEFAULT,
        option: rabbit_host, value: "{{ nova_rabbitmq_host }}" }
    - { section: DEFAULT,
        option: rabbit_port, value: "{{ nova_rabbitmq_port }}" }
    - { section: DEFAULT, option: rabbit_userid, value: neutron }
    - { section: DEFAULT, option: rabbit_password,
        value: "{{ nova_rabbitmq_neutron_password }}" }
    - { section: DEFAULT, option: rabbit_virtual_host, value: /neutron }
    - { section: DEFAULT, option: auth_strategy, value: keystone }
    - { section: DEFAULT, option: core_plugin, value: ml2 }
    - { section: DEFAULT, option: service_plugins, value: router }
    - { section: DEFAULT, option: allow_overlapping_ips, value: true }
    - { section: keystone_authtoken, option: auth_uri,
        value: "{{ nova_identity_admin_url }}" }
    - { section: keystone_authtoken, option: auth_host,
        value: "{{ nova_identity_host }}" }
    - { section: keystone_authtoken, option: auth_port, value: 35357 }
    - { section: keystone_authtoken, option: auth_protocol, value: http }
    - { section: keystone_authtoken, option: admin_tenant_name,
        value: service }
    - { section: keystone_authtoken, option: admin_user, value: neutron }
    - { section: keystone_authtoken, option: admin_password,
        value: "{{ nova_identity_neutron_password }}" }
  register: modify_neutron_conf

- name: ensure ml2_conf.ini is properly configured
  ini_file:
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: ml2, option: type_drivers, value: gre }
    - { section: ml2, option: tenant_network_types, value: gre }
    - { section: ml2, option: mechanism_drivers, value: openvswitch }
    - { section: ml2_type_gre, option: tunnel_id_ranges, value: "1:1000" }
    - { section: ovs, option: local_ip,
        value: "{{ nova_compute_external_ip }}" }
    - { section: ovs, option: tunnel_type, value: gre }
    - { section: ovs, option: enable_tunneling, value: true }
    - { section: securitygroup, option: firewall_driver,
        value: neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver }
    - { section: securitygroup, option: enable_security_group, value: true }
  register: modify_ml2_ini

- name: ensure nova and neutron sqlite are deleted
  file:
    dest: /var/lib/nova/{{ item }}.sqlite
    state: absent
  with_items:
    - nova
    - neutron

- name: restart nova
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - nova-compute
    - openvswitch-switch
    - neutron-plugin-openvswitch-agent 
  when: (modify_nova_conf|changed or modify_neutron_conf|changed or 
         modify_ml2_ini|changed) and
        nova_compute_dockerize_context is not defined
