---
# FIXME: my_ip and vncserver settings will require tinkering...
- name: ensure nova.conf is properly configured
  ini_file:
    dest: /etc/nova/nova.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: DEFAULT, option: verbose, value: "{{ nova_log_verbose }}" }
    - { section: DEFAULT, option: debug, value: "{{ nova_log_debug }}" }
    - { section: DEFAULT, option: log_dir, value: "{{ nova_log_dir }}" }
    - { section: DEFAULT, option: rpc_backend, value: rabbit }
    - { section: DEFAULT, option: rabbit_host, 
        value: "{{ nova_rabbitmq_host }}" }
    - { section: DEFAULT, option: rabbit_port, 
        value: "{{ nova_rabbitmq_port }}" }
    - { section: DEFAULT, option: rabbit_userid, value: nova }
    - { section: DEFAULT, option: rabbit_password, 
        value: "{{ nova_rabbitmq_nova_password }}" }
    - { section: DEFAULT, option: rabbit_virtual_host, value: /nova }
    - { section: DEFAULT, option: glance_host, 
        value: "{{ nova_glance_host }}" }
    - { section: DEFAULT, option: my_ip, 
        value: "127.0.0.1" }
    - { section: DEFAULT, option: vncserver_listen, 
        value: "0.0.0.0" }
    - { section: DEFAULT, option: vncserver_proxyclient_address, 
        value: "127.0.0.1" }
    - { section: DEFAULT, option: novncproxy_base_url,
        value: "http://127.0.0.1:6080/vnc_auto.html" }
    - { section: DEFAULT, option: auth_strategy, value: keystone }
    - { section: database, option: connection,
        value: "mysql://nova:{{ nova_mysql_nova_password }}@{{ 
                  nova_mysql_host }}:{{ nova_mysql_port }}/nova" }
    - { section: keystone_authtoken, option: auth_uri, 
        value: "{{ nova_identity_internal_url }}" }
    - { section: keystone_authtoken, option: auth_host, 
        value: "{{ nova_identity_endpoint_host }}" }
    - { section: keystone_authtoken, option: auth_port, value: 35357 }
    - { section: keystone_authtoken, option: auth_protocol, value: http }
    - { section: keystone_authtoken, option: admin_tenant_name, 
        value: service }
    - { section: keystone_authtoken, option: admin_user, value: nova }
    - { section: keystone_authtoken, option: admin_password, 
        value: "{{ nova_identity_nova_password }}" }
  register: modify_nova_ini

- name: ensure nova-compute.conf is properly configured
  ini_file:
    dest: /etc/nova/nova-compute.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: libvirt, option: virt_type, 
        value: "{{ nova_compute_virt_type }}" }
 
- name: ensure nova sqlite is deleted
  file:
    dest: /var/lib/nova/nova.sqlite
    state: absent

- name: remove old log files
  shell: rm /var/log/nova/*
  when: nova_compute_dockerize_context is defined or
        modify_nova_ini|changed

- name: restart nova
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - nova-compute
  when: modify_nova_ini|changed and
        nova_compute_dockerize_context is not defined

